---
import type { MarkdownHeading } from 'astro';

export interface Props {
    url?: string;
    headings?: MarkdownHeading[];
    depth?: number;
    max?: number;
}

const {
    url=Astro.url.pathname,
    headings=[],
    depth=1,
    max=6
} = Astro.props

const equalDepth = headings.filter(h => h.depth === +depth);
---

<ul data-depth={depth}>
    { equalDepth.map((heading, i) => {
        const start = headings.indexOf(heading) + 1
        const end = headings.indexOf(equalDepth[i + 1])
        const subHeadings = headings.slice(start, end === -1 ? undefined : end)
        const _props= { 
            url, 
            headings: subHeadings, 
            depth: heading.depth + 1,
            max
        }
        const param = {
            heading,
            subHeadings,
            ...Astro.props
        } 
        return <li>
            {Astro.slots.default
               ? <Fragment set:html={Astro.slots.render('default', [param])}/>
               : <a href={`${url}#${heading.slug}`}>{heading.text}</a>
            }
            <Astro.self {..._props}/>
        </li>
    })}
</ul>