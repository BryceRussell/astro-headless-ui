---
export interface Props {
    name?: string;
    default?: string;
    defaultKey?: string;
    args?: Record<string, any>;
}

const {
    default: _default='default',
    defaultKey=_default,
    args
} = Astro.props as Props

let { name } = Astro.props

let html: string;

if (name !== undefined) {
    if (!name) name = _default
    if (Astro.slots.has(name)) html = args && (args[name] || args[defaultKey])
        ? (await Astro.slots.render(name, [args[name] || args[defaultKey]]))
        : (await Astro.slots.render(name))
}
else {
    for (let slot in Astro.slots) {
        html = await Astro.slots.render(slot)
        if (html) break
    }
}

if (!html!) {
    html = args && args[defaultKey]
        ? (await Astro.slots.render(_default, [args[defaultKey]]))
        : (await Astro.slots.render(_default))
}
---

<Fragment set:html={html}/>