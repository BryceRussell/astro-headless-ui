---
import Base from "@/layouts/Base.astro";
import { ScrollProp, MouseProp, KeyboardProp, NetworkProp, NoScriptProp } from "astro-headless-ui";
---

<Base>
    <main>
        <h1>CSS Properties</h1>

        <p>A Collection of utility variables</p>

        <hr>

        <h2>HTML/CSS Only</h2>

        <h3>NoScript Property and Class</h3>
        <p>Custom property for displaying styles when javascript is disabled</p>
        <p><strong>Toggle javascript on/off: </strong></p>
        <p><strong>'noscript-hide'</strong> class: <span class="noscript-hide" style="text-decoration:underline;color:green;">This text only visible when javascript is enabled</span></p>
        <p id="noscript" style="color:var(--noscript, red);">This text is only red if javascript is disabled</p>
        <NoScriptProp />

        <hr>

        <h2>Client Side Scripts</h2>

        <h3>Scroll Property</h3>
        <p>The top/left offsets of the scroll position inside the window or an element</p>
        <p id="scrollY">Window Scroll Y:</p>
        <p id="scrollX">Window Scroll X:</p>
        <p><strong>Target specific element:</strong></p>
        <div id="e-scroll" style="overflow:scroll;height:6rem;background-color:lightblue;">
            <div style="position:relative;height:100rem;width:100rem;">
                <div style="position:sticky;top:0;left:0;width:fit-content;height:fit-content;padding:.5rem;">
                    <p id="e-scrollY">Element Scroll Y:</p>
                    <p id="e-scrollX">Element Scroll X:</p>
                </div>
            </div>
        </div>
        <ScrollProp />
        <ScrollProp property="e-scroll" selector="#e-scroll"/>

        <h3>Mouse Properties</h3>
        <p>The X/Y position of the mouse inside the window or inside of an element</p>
        <p id="mouseX">Window Mouse X:</p>
        <p id="mouseY">Window Mouse Y:</p>
        <p><strong>Target specific element:</strong></p>
        <div id="e-mouse" style="height:10rem;padding:.5rem;background-color:lightblue;">
            <p id="e-mouseX">Element Mouse X:</p>
            <p id="e-mouseY">Element Mouse Y:</p>
        </div>
        <MouseProp />
        <MouseProp property="e-mouse" selector="#e-mouse"/>

        <h3>Keyboard Properties</h3>
        <p id="keyboard-key">Last key:</p>
        <div>
            <label for="e-keyboard" id="e-keyboard-key" style="margin-right:.25rem;">Last key in input:</label>
            <input id="e-keyboard" />
        </div>
        <KeyboardProp />
        <KeyboardProp selector="#e-keyboard" attach=":root" property="e-keyboard" />

        <hr>

        <h2>Limited Compatibility</h2>

        <h3>Network Information Properties</h3>
        <p><strong>Experimental</strong> does not work with <strong>Firefox</strong>: <a href="https://developer.mozilla.org/en-US/docs/Web/API/NetworkInformation#browser_compatibility">compatibility table</a></p>
        <p id="network-type">Network type:</p>
        <p id="network-band">Network band:</p>
        <p id="network-downlink">Network downlink:</p>
        <p id="network-downlink-max">Network downlink maximum:</p>
        <p id="network-rtt">Network round time trip:</p>
        <p id="network-saveData" ><strong>'saveData-hide'</strong> class: <span class="saveData-hide" style="color:green;">This text is hidden if the user has set a reduced data usage option on the user agent.</span></p>
        <NetworkProp />
    </main>
</Base>

<style is:global>
    body {
        position: relative;
        width: 200rem;
        padding: 0;
        margin: 0;
    }
    main {
        position: sticky;
        top: 0;
        left: 0;
        display: flex;
        flex-direction: column;
        gap: 0.25rem;
        padding: 1rem;
        height: 100%;
        max-width: 75ch;
    }

    h3 {
        padding-bottom: .25rem;
        border-bottom: 1px solid #eee;
    }

    p {
        margin: 0.25rem 0;
    }

    hr {
        width: 100%;
        height: 3px;
        background-color: black;
    }

    *::after {
        margin-left: 0.25rem;
    }

    #noscript {
        color: green;
    }

    #scrollY::after {
        counter-reset: c var(--scrollY);
        content: counter(c);
    }

    #scrollX::after {
        counter-reset: c var(--scrollX);
        content: counter(c);
    }

    #e-scrollY::after {
        counter-reset: c var(--e-scrollY);
        content: counter(c);
    }

    #e-scrollX::after {
        counter-reset: c var(--e-scrollX);
        content: counter(c);
    }

    #mouseY::after {
        counter-reset: c var(--mouseY);
        content: counter(c);
    }

    #mouseX::after {
        counter-reset: c var(--mouseX);
        content: counter(c);
    }

    #e-mouseY::after {
        counter-reset: c var(--e-mouseY);
        content: counter(c);
    }

    #e-mouseX::after {
        counter-reset: c var(--e-mouseX);
        content: counter(c);
    }

    #keyboard-key::after {
        content: var(--keyboard-key);
    }

    #e-keyboard-key::after {
        content: var(--e-keyboard-key);
    }

    #network-type::after {
        content: var(--network-type);
    }

    #network-band::after {
        content: var(--network-band);
    }

    #network-downlink::after {
        counter-reset: c var(--network-downlink);
        content: counter(c);
    }

    #network-downlink-max::after {
        counter-reset: c var(--network-downlink-max);
        content: counter(c);
    }

    #network-rtt::after {
        counter-reset: c var(--network-rtt);
        content: counter(c);
    }
</style>